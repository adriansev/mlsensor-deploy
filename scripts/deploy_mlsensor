#!/bin/bash

SE_NAME=$1

## if argument null check if there is env variable ALICEXRD_SE_NAME
[[ -z "${SE_NAME}" ]] && SE_NAME=${ALICEXRD_SE_NAME}

DOWNLOAD_LOC="https://raw.githubusercontent.com/adriansev/mlsensor-deploy/"
BRANCH="master"
MLSENSOR_LOC="${DOWNLOAD_LOC}/${BRANCH}/"

CURL="/usr/bin/curl -fsSLk"

## default location $HOME/MLSensor IF NOT DEFINED $MLSENSOR_HOME
MLSENSOR_HOME=${MLSENSOR_HOME:-$HOME/MLSensor}

###############################################################################################
###   DEPLOY MLSensor

## make sure the destination is in place
mkdir -p ${MLSENSOR_HOME}
cd $(/usr/bin/dirname ${MLSENSOR_HOME})

## if MLSensor in place, try to stop it
MLSENSOR_FOUND_HOME=$(ps -C java -o args= | awk '/MLSENSOR_HOME/ { for ( x = 1; x <= NF; x++ ) { if ($x ~ "-DMLSENSOR_HOME"){ n=split($x,home,"="); print home[n];}}}')
[[ -n "${MLSENSOR_FOUND_HOME}" ]] && ${MLSENSOR_FOUND_HOME}/bin/MLSensor stop

## backup old/previous version
[[ -d "${MLSENSOR_HOME}" ]] && mv -v ${MLSENSOR_HOME} ${MLSENSOR_HOME}_$(date +%Y%m%d_%k%M%S)

${CURL} -o ${MLSENSOR_HOME}/bin/MLSensor ${MLSENSOR_LOC}/usr/bin/MLSensor
${CURL} -o ${MLSENSOR_HOME}/bin/mlsensor_config ${MLSENSOR_LOC}/usr/bin/mlsensor_config
chmod +x ${MLSENSOR_HOME}/bin/MLSensor ${MLSENSOR_HOME}/bin/mlsensor_config

${CURL} -o ${MLSENSOR_HOME}/etc/mlsensor_env ${MLSENSOR_LOC}/etc/mlsensor/mlsensor_env
${CURL} -o ${MLSENSOR_HOME}/etc/mlsensor.properties.tmp ${MLSENSOR_LOC}/etc/mlsensor/mlsensor.properties.tmp
cp ${MLSENSOR_HOME}/etc/mlsensor.properties.tmp ${MLSENSOR_HOME}/etc/mlsensor.properties

${CURL} -o ${MLSENSOR_HOME}/lib/apmon.jar ${MLSENSOR_HOME}/lib/apmon.jar
${CURL} -o ${MLSENSOR_HOME}/lib/FarmMonitor.jar ${MLSENSOR_HOME}/lib/FarmMonitor.jar
${CURL} -o ${MLSENSOR_HOME}/lib/MLSensor.jar ${MLSENSOR_HOME}/lib/MLSensor.jar

########################################
###   Configure mlsensor_env - java  ###
########################################

[[ -z "${JAVA_HOME}" ]] && JAVA_CMD="java" || JAVA_CMD="${JAVA_HOME}/bin/java"

LOCAL_VERSION=$(${JAVA_CMD} -Xmx2m -Xms2m -version 2>&1 | awk '/java version/ { print substr($3, 2, length($3)-2); }')

if [[ -z "${LOCAL_VERSION}" ]] ; then
    cd ${MLSENSOR_HOME}

    ## get latest local jre
    rm -rf /tmp/jre-latest.tar.gz
    /usr/bin/curl -fsSL -o /tmp/jre-latest.tar.gz http://monitor.spacescience.ro/java/jre-latest.tar.gz || { echo "Could not download jre-latest.tar.gz" && exit 1; }

    ## create jre directory and extract the latest jre there
    mkdir -p ${MLSENSOR_HOME}/jre
    tar -C ${MLSENSOR_HOME}/jre/ --strip-components=1 -xf /tmp/jre-latest.tar.gz && rm -rf /tmp/jre-latest.tar.gz

    replace_in_file ${MLSENSOR_HOME}/etc/mlsensor_env "#JAVA_HOME=" "export JAVA_HOME=${MLSENSOR_HOME}/jre\n\nexport PATH=\$JAVA_HOME/bin:\$PATH"
else
    replace_in_file ${MLSENSOR_HOME}/etc/mlsensor_env "#JAVA_HOME=" "export JAVA_HOME=${JAVA_HOME}\n\nexport PATH=\$JAVA_HOME/bin:\$PATH"
fi

###############################################################################################
## Configure the mlsensor.properties
echo "Configuring mlsensor.properties"
echo ${MLSENSOR_HOME}/bin/mlsensor_config ${MLSENSOR_HOME}/etc/mlsensor.properties ${SE_NAME}
${MLSENSOR_HOME}/bin/mlsensor_config ${MLSENSOR_HOME}/etc/mlsensor.properties ${SE_NAME}

echo "Now run ${MLSENSOR_HOME}/bin/MLSensor start"

